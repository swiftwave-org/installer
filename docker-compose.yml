# swiftwave should be stack name
version: '3.5'
services:
  dashboard:
    image: "ghcr.io/swiftwave-org/dashboard:${SWIFTWAVE_VERSION}"
    deploy:
      mode: global
      placement:
        constraints:
          - node.labels.swiftwave_controlplane_node==true
    ports:
      - target: 9999
        published: 9999
        protocol: tcp
        mode: ingress
  app:
    image: "ghcr.io/swiftwave-org/swiftwave:${SWIFTWAVE_VERSION}"
    volumes:
      - ${SWIFTWAVE_APP_FOLDER}:/data:rw
      - ${SWIFTWAVE_APP_TARBALL_FOLDER}:/data/tarball:rw
      - /var/run/docker.sock:/var/run/docker.sock:rw
    deploy:
      mode: global
      placement:
        constraints:
          - node.labels.swiftwave_controlplane_node==true
    ports:
      - target: 3333
        published: 3333
        protocol: tcp
        mode: ingress
    dns:
      - "127.0.0.11" 
      - "1.1.1.1"
    environment:
      - PORT=3333
      - ADMIN_USERNAME=${SWIFTWAVE_ADMIN_USERNAME}
      - ADMIN_PASSWORD=${SWIFTWAVE_ADMIN_PASSWORD_HASH}
      - CODE_TARBALL_DIR=/data/tarball
      - SWARM_NETWORK=${SWARM_NETWORK}
      - HAPROXY_SERVICE_NAME=swiftwave_haproxy
      - DATABASE_TYPE=sqlite
      - SQLITE_DATABASE=/data/gorm.db
      - POSTGRESQL_URI=
      - REDIS_ADDRESS=swiftwave_redis:6379
      - REDIS_PASSWORD=
      - ACCOUNT_EMAIL_ID=${SWIFTWAVE_ADMIN_EMAIL}
      - ACCOUNT_PRIVATE_KEY_FILE_PATH=/data/account_private_key.key
      - HAPROXY_MANAGER_HOST=swiftwave_haproxy
      - HAPROXY_MANAGER_PORT=5555
      - HAPROXY_MANAGER_USERNAME=admin
      - HAPROXY_MANAGER_PASSWORD=mypassword
      - DOCKER_HOST=unix:///var/run/docker.sock
      - RESTRICTED_PORTS=80,443,5555,3333,9999
      - SESSION_TOKEN_EXPIRY_MINUTES=60
    depends_on:
      - haproxy
      - redis
    networks:
      - controlplane_network
  haproxy:
    image: "haproxytech/haproxy-debian:2.9"
    volumes:
      - ${SWIFTWAVE_HAPROXY_FOLDER}:/usr/local/etc/haproxy:rw
    deploy:
      mode: global
      placement:
        constraints:
          - node.labels.swiftwave_controlplane_node==true
    networks:
      - swarm_network
      - controlplane_network
  redis:
    image: "bitnami/redis:6.2.13-debian-11-r71"
    volumes:
      - ${SWIFTWAVE_REDIS_FOLDER}:/bitnami/redis/data:rw
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    deploy:
      mode: global
      placement:
        constraints:
          - node.labels.swiftwave_controlplane_node==true
    networks:
      - controlplane_network
networks:
  swarm_network:
    name: swarm_network
    driver: overlay
    external: true
  controlplane_network:
    driver: overlay
    internal: true
    attachable: false
